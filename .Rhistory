install.packages("quantmod")
library(quantmod)
quantmod()
getSymbols.google(VSLIX,from = 2012, to = system.time())
getSymbols.google(VSLIX,from = 2012, to = system.time())
df= getSymbols('VSLIX',src='google')
df= getSymbols('MUTF:VSLIX',src='google')
df= getSymbols('MUTF%3AVSLIX',src='google')
getSymbols.google('VSLIX',from = 2012, to= Sys.Date() )
getSymbols.google(VSLIX,from = 2012, to= Sys.Date() )
getSymbols.google(MUTF:VSLIX,from = 2012, to= Sys.Date() )
getSymbols.google()
?getSymbols.google()
getSymbols('VSLIX',src='google')
getSymbols('MUTF:VSLIX',src='google')
getSymbols('MUTF%3VSLIX',src='google')
getSymbols('MUTF%3AVSLIX',src='google')
getSymbols('MUTF%3VSLIX',src='google')
getSymbols('MUTF%3AVSLIX',src='google', from = 2012, to= Sys.Date())
getSymbols('VSLIX',src='google', from = 2012, to= Sys.Date())
getSymbols('YAHO',src='google', from = 2012, to= Sys.Date())
getSymbols('MSFT',src='google', from = 2012, to= Sys.Date())
getSymbols('MSFT',src='google')
View(MSFT)
getSymbols('VSLIX',src='google')
getSymbols('VSLIX')
View(VSLIX)
da = getSymbols('VSLIX')
da = data.frame(getSymbols('VSLIX'))
View(da)
View(VSLIX)
VSLIX[1,1]
da = data.frame(VSLIX)
View(da)
da = getSymbols('VSLIX', from = 2012, to= Sys.Date())
da = data.frame(VSLIX)
da = data.frame(VSLIX)
getSymbols('VSLIX', from = 2012, to= Sys.Date())
da = data.frame(VSLIX)
View(VSLIX)
getSymbols('VSLIX', from = 2012, to= Sys.Date())
getSymbols('VSLIX')
?getSymbols()
$da
da[1 :10,]
mean(da$VSLIX.Close)
da$VSLIX.Close[2646-253,]
da$VSLIX.Close[2646-253: 2646  ,]
da[2646-253: 2646  ,]
d1 = da[2646-253: 2646,]
View(d1)
View(da)
d1 = da[2646-365: 2646,]
a =2646-365
d1 = da[a: 2646,]
a =2646-252
d1 = da[a: 2646,]
mean(d1$VSLIX.Open)
sd(d1$VSLIX.Open) / mean(d1$VSLIX.Open)
(sd(d1$VSLIX.Open) / mean(d1$VSLIX.Open))*100
(sd(d1$VSLIX.Adjusted) / mean(d1$VSLIX.Adjusted))*100
mf_data = file.choose()
rm(list=ls())
mf_data = read.csv( file.choose())
View(mf_data)
View(mf_data)
mf_data = read.csv( file.choose())
mf_data = read.csv( file.choose())
View(mf_data)
mf<- transform(mf_data,X5.year.return = as.numeric( (X5.year.return - min(X5.year.return))/(max(X5.year.return)-min(X5.year.return) )  ) )
View(mf)
View(mf)
View(mf_data)
View(mf)
mf<- transform(mf_data,X5.year.return = as.numeric( (X3.year.return - min(X3.year.return))/(max(X3.year.return)-min(X3.year.return))))
mf<- transform(mf_data,X5.year.return = as.numeric( (X1.year.return - min(X1.year.return))/(max(X1.year.return)-min(X1.year.return))))
mf<- transform(mf_data,X5.year.return = as.numeric( (X5.year.return - min(X5.year.return))/(max(X5.year.return)-min(X5.year.return))))
mf<- transform(mf_data,X3.year.return = as.numeric( (X3.year.return - min(X3.year.return))/(max(X3.year.return)-min(X3.year.return))))
mf<- transform(mf_data,X1.year.return = as.numeric( (X1.year.return - min(X1.year.return))/(max(X1.year.return)-min(X1.year.return))))
mf<- transform(mf_data,X5.year.return = as.numeric( (X5.year.return - min(X5.year.return))/(max(X5.year.return)-min(X5.year.return))))
mf<- transform(mf,X3.year.return = as.numeric( (X3.year.return - min(X3.year.return))/(max(X3.year.return)-min(X3.year.return))))
mf<- transform(mf,X1.year.return = as.numeric( (X1.year.return - min(X1.year.return))/(max(X1.year.return)-min(X1.year.return))))
mf<- transform(mf,assests = as.numeric( (assests - min(assests))/(max(assests)-min(assests))))
mf<- transform(mf,Expense.Ratio = as.numeric( (max(Expense.Ratio)- Expense.Ratio)/(max(Expense.Ratio)-min(Expense.Ratio))))
mf<- transform(mf,Expense.Ratio = as.numeric( (max(Expense.Ratio)- Expense.Ratio)/(max(Expense.Ratio)-min(Expense.Ratio))))
a = input('hi')
a = raw_input('hi')
for( i in range(1,5)){
cat("enter rank for measure 1", i, '\n ')
a = prompt(" ")
ranks<-c(ranks,a)
}
for( i in range(1,5)){
cat("enter rank for measure 1", i, '\n ')
a = prompt()
ranks<-c(ranks,a)
}
for( i in range(1,5)){
cat("enter rank for measure 1", i, '\n ')
a = readline()
ranks<-c(ranks,a)
}
ranks<-c()
for( i in range(1,5)){
cat("enter rank for measure 1", i, '\n ')
a = readline()
ranks<-c(ranks,a)
}
ranks<-c()
for( i in range(1,5)){
cat("enter rank for measure ", i, '\n ')
a = readline()
ranks<-c(ranks,a)
}
ranks<-c()
for( i in 1:5){
cat("enter rank for measure ", i, '\n ')
a = readline()
ranks<-c(ranks,a)
}
ranks<-c()
for( i in 1:5){
cat("enter rank for measure ", i, ': ')
a = readline()
ranks<-c(ranks,a)
}
ranks <-data.frame()
# ranks - user input
ranks<-c()
ranks<-c()
for( i in 1:5){
cat("enter rank for measure ", i, ': ')
a = readline()
ranks<-c(ranks,a)
}
rank_df<-data.frame()
rank_df<- within(rank_df, ranks )
rank_df<- within(rank_df, ranks<- ranks )
View(rank_df)
rank_df<-data.frame()
rank_df$ranks <- ranks
rank_df[['ranks']] <- ranks
rank_df[, 'ranks']<- ranks
rank_df['ranks']<- ranks
rank_df$rank<- ranks
rank_df<-data.frame( ranks)
rank_df$'1/R' <- 1/rank_df$ranks
rank_df$'R.inverse' <- 1/rank_df$ranks
rank_df$R.inverse <- 1/rank_df$ranks
rank_df<- within( rank_df,  r.inverse<- 1/ rank_df$ranks)
rank_df<- within( rank_df,  r.inverse<-  1/ (rank_df$ranks))
rank_df<- within( rank_df,  r.inverse<-  (1/ (rank_df$ranks)))
View(rank_df)
ranks<-c()
for( i in 1:5){
cat("enter rank for measure ", i, ': ')
a = readline()
ranks<-c(ranks,a)
}
rank_df$rank.inverse <- 1/ rank_df$ranks
ranks<-c()
for( i in 1:5){
cat("enter rank for measure ", i, ': ')
a = readline()
ranks<-c(ranks,a)
}
View(rank_df)
rank_df<-data.frame( ranks)
rank_df$rank.inverse <-  (1/rank_df$ranks)
2^-1
rank_df$rank.inverse <-  rank_df$ranks^-1
View(rank_df)
rank_df<-data.frame( as.numberic(ranks))
rank_df<-data.frame( as.numeric(ranks))
rank_df$rank.inverse <-  rank_df$ranks^-1
View(rank_df)
rank_df<-data.frame(ranks)
rank_df<- transform(rank_df, ranks = as.numeric(ranks))
View(rank_df)
rank_df$r.inverse <- ranks^-1
rank_df$r.inverse <- rank_df$ranks ^-1
sum(rank_df$r.inverse)
rank_df$weight<- rank_df$r.inverse/sum(rank_df$r.inverse)
ranks<-c()
for( i in 1:5){
cat("enter rank for measure ", i, ': ')
a = readline()
ranks<-c(ranks,a)
}
rank_df$weight<- rank_df$r.inverse/sum(rank_df$r.inverse)
ranks<-c()
for( i in 1:5){
cat("enter rank for measure ", i, ': ')
a = readline()
ranks<-c(ranks,a)
}
rank_df<-data.frame(ranks)
rank_df<- transform(rank_df, ranks = as.numeric(ranks))
rank_df$r.inverse <- rank_df$ranks ^-1
rank_df$weight<- rank_df$r.inverse/sum(rank_df$r.inverse)
View(rank_df)
mf_weights <- mf
View(mf_weights)
mf_weights <- transform(mf_weights, X5.year.return = mf_data$X5.year.return * rank_df$weight[1])
mf_weights <- transform(mf_weights, X3.year.return = mf_data$X3.year.return * rank_df$weight[2])
mf_weights <- transform(mf_weights, X1.year.return = mf_data$X1.year.return * rank_df$weight[3])
mf_weights <- transform(mf_weights, Expense.Ratio  = mf_data$Expense.Ratio * rank_df$weight[4])
mf_weights <- transform(mf_weights, assests = mf_data$assests * rank_df$weight[5])
View(mf_data)
View(mf)
mf_weights <- mf
rank_df$weight[1]
rank_df$weight[2]
rank_df$weight[3]
rank_df$weight[4]
rank_df$weight[5]
mf_weights <- transform(mf_weights, X5.year.return = mf_data$X5.year.return * rank_df$weight[1])
0.4137931*0.9196102
mf_weights <- transform(mf_weights, X5.year.return = mf_weights$X5.year.return * rank_df$weight[1])
mf_weights <- transform(mf_weights, X3.year.return = mf_weights$X3.year.return * rank_df$weight[2])
mf_weights <- transform(mf_weights, X1.year.return = mf_weights$X1.year.return * rank_df$weight[3])
mf_weights <- transform(mf_weights, Expense.Ratio  = mf_weights$Expense.Ratio * rank_df$weight[4])
mf_weights <- transform(mf_weights, assests = mf_weights$assests * rank_df$weight[5])
mf_weights <- mf
mf_weights <- transform(mf_weights, X5.year.return = mf_weights$X5.year.return * rank_df$weight[1])
mf_weights <- transform(mf_weights, X3.year.return = mf_weights$X3.year.return * rank_df$weight[2])
mf_weights <- transform(mf_weights, X1.year.return = mf_weights$X1.year.return * rank_df$weight[3])
mf_weights <- transform(mf_weights, Expense.Ratio  = mf_weights$Expense.Ratio * rank_df$weight[4])
mf_weights <- transform(mf_weights, assests = mf_weights$assests * rank_df$weight[5])
mf_weights$score<- mf_weights$X5.year.return + mf_weights$X3.year.return +
mf_weights$X1.year.return + mf_weights$Expense.Ratio + mf_weights$assests
order <-mf_weights[order(mf_weights$score),]
View(order)
order <-mf_weights[rev(order(mf_weights$score)),]
temp<- data.frame(subset(mf_weights,select = c(1,2,8)))
View(temp)
order <-temp[rev(order(temp$score)),]
View(order)
order$rank <- c(1: nrow(order))
head(order)
cat( ' measure 1: 5 year return  \n')
cat( ' measure 2: 2 year return  \n')
cat( ' measure 3: 1 year return  \n')
cat( ' measure 4: assests  \n')
cat( ' measure 5: expense ratio  \n')
